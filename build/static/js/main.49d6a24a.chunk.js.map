{"version":3,"sources":["components/persons.js","components/filter.js","components/personForm.js","services/persons.js","components/notification.js","App.js","index.js"],"names":["Persons","filteredList","handleDelete","map","person","i","name","number","onClick","Filter","props","value","onChange","PersonForm","onSubmit","onSubmitForm","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","deletePerson","id","delete","replace","put","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","filteredPerson","setFilteredPerson","setMessage","messageType","setMessageType","useEffect","console","log","initialPersons","filter","includes","event","target","preventDefault","nameObject","findPerson","findIndex","p","find","window","confirm","editedList","setTimeout","catch","err","returnedPerson","concat","newList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49d6a24a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({ filteredList, handleDelete }) => {\r\n  return (\r\n    <ul>\r\n      {filteredList.map((person, i) => \r\n        <li key={i}>{person.name} {person.number}<button onClick={() => handleDelete(person)}>delete</button></li>\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>filter shown with <input value={props.value} onChange={props.onChange}/></div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.onSubmitForm}>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response)\r\n}\r\n\r\nconst replace = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst personService = { getAll, create, deletePerson, replace }\r\n\r\nexport default personService","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={type}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect  } from 'react'\nimport Persons from './components/persons'\nimport Filter from './components/filter'\nimport PersonForm from './components/personForm'\nimport personService from './services/persons'\nimport Notification from './components/notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filteredPerson, setFilteredPerson ] = useState('')\n  const [ message, setMessage] = useState(null)\n  const [ messageType, setMessageType] = useState('')\n\n  useEffect(() => {\n    console.log(\"effect\");\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const findPerson = persons.findIndex(person => person.name === newName);    \n    const p = persons.find(person => person.name === newName);   \n\n    if(findPerson !== -1){\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`)) {\n          personService\n            .replace(p.id, nameObject)\n            .then(response => {\n              persons[findPerson] = response;\n              const editedList = persons.map(person => person);\n              setPersons(editedList)\n\n              setMessage(\n                `Added ${response.name}`\n              )\n              setMessageType('success')\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000)\n            })\n            .catch(err => {\n              console.log(err);              \n            });\n        }\n    } else {\n        personService\n          .create(nameObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n\n            setMessage(\n              `Added ${returnedPerson.name}`\n            )\n            setMessageType('success')\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n    }   \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setFilteredPerson(event.target.value)    \n  }\n\n  const filteredList = !filteredPerson ? persons : persons.filter(person => \n    person.name.includes(filteredPerson) \n  );\n  \n  const handleDelete = (p) => {\n    const newList = persons.filter(person => person.id !== p.id);\n    \n    if (window.confirm(`Delete ${p.name}`)) {\n      personService\n          .deletePerson(p.id)\n          .then(response => {\n            setPersons(newList)\n          })\n          .catch(err => {\n            console.log(err);\n            setMessage(\n              `Information of ${p.name} has already been removed from server`\n            )\n            setMessageType('error')\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n            setPersons(newList)\n          });\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType} />\n      <Filter value={filteredPerson} onChange={handleSearchChange} />\n      <h2>add a new</h2>\n      <PersonForm onSubmitForm={addName} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons filteredList={filteredList} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}